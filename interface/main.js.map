{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/administration/administration.component.css","webpack:///./src/app/components/administration/administration.component.html","webpack:///./src/app/components/administration/administration.component.ts","webpack:///./src/app/components/all-reports/all-reports.component.css","webpack:///./src/app/components/all-reports/all-reports.component.html","webpack:///./src/app/components/all-reports/all-reports.component.ts","webpack:///./src/app/components/all-users/all-users.component.css","webpack:///./src/app/components/all-users/all-users.component.html","webpack:///./src/app/components/all-users/all-users.component.ts","webpack:///./src/app/components/calendar/calendar.component.css","webpack:///./src/app/components/calendar/calendar.component.html","webpack:///./src/app/components/calendar/calendar.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/messages/messages.component.css","webpack:///./src/app/components/messages/messages.component.html","webpack:///./src/app/components/messages/messages.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/new-appointment/new-appointment.component.css","webpack:///./src/app/components/new-appointment/new-appointment.component.html","webpack:///./src/app/components/new-appointment/new-appointment.component.ts","webpack:///./src/app/components/new-patient/new-patient.component.css","webpack:///./src/app/components/new-patient/new-patient.component.html","webpack:///./src/app/components/new-patient/new-patient.component.ts","webpack:///./src/app/components/patient/patient.component.css","webpack:///./src/app/components/patient/patient.component.html","webpack:///./src/app/components/patient/patient.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/reports/reports.component.css","webpack:///./src/app/components/reports/reports.component.html","webpack:///./src/app/components/reports/reports.component.ts","webpack:///./src/app/components/write-message/write-message.component.css","webpack:///./src/app/components/write-message/write-message.component.html","webpack:///./src/app/components/write-message/write-message.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"container\\\">\\r\\n    <ng-flash-message></ng-flash-message>\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  \\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\n\r\nimport { ValidateService } from './services/validate.service';\r\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\r\nimport { AuthService } from './services/auth.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AuthGuard} from './guards/auth.guard';\r\nimport { CalendarComponent } from './components/calendar/calendar.component';\r\nimport { MessagesComponent } from './components/messages/messages.component';\r\nimport { PatientComponent } from './components/patient/patient.component';\r\nimport { AdministrationComponent } from './components/administration/administration.component';\r\nimport { ReportsComponent } from './components/reports/reports.component';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { AllUsersComponent } from './components/all-users/all-users.component';\r\nimport { WriteMessageComponent } from './components/write-message/write-message.component';\r\nimport { NewPatientComponent } from './components/new-patient/new-patient.component';\r\nimport { NewAppointmentComponent } from './components/new-appointment/new-appointment.component';\r\nimport { AllReportsComponent } from './components/all-reports/all-reports.component';\r\n\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  {path: '', component: LoginComponent},\r\n  {path: 'allUsers', component: AllUsersComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  { path: 'navbar', component: NavbarComponent},\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\r\n  { path: 'calendar', component: CalendarComponent, canActivate: [AuthGuard]},\r\n  { path: 'patient', component: PatientComponent, canActivate: [AuthGuard]},\r\n  { path: 'administration', component: AdministrationComponent, canActivate: [AuthGuard]},\r\n  { path: 'reports', component: ReportsComponent, canActivate: [AuthGuard]},\r\n  { path: 'messages', component: MessagesComponent, canActivate: [AuthGuard]},\r\n  { path: 'writeMessage', component: WriteMessageComponent, canActivate: [AuthGuard]},\r\n  { path: 'newPatient', component: NewPatientComponent, canActivate: [AuthGuard]},\r\n  { path: 'newAppointment', component: NewAppointmentComponent, canActivate: [AuthGuard]},\r\n  { path: 'allReports', component: AllReportsComponent, canActivate: [AuthGuard]}\r\n\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    DashboardComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    CalendarComponent,\r\n    MessagesComponent,\r\n    PatientComponent,\r\n    AdministrationComponent,\r\n    ReportsComponent,\r\n    AllUsersComponent,\r\n    WriteMessageComponent,\r\n    NewPatientComponent,\r\n    NewAppointmentComponent,\r\n    AllReportsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    FormsModule,\r\n    NgFlashMessagesModule.forRoot(),\r\n    HttpClientModule,\r\n    HttpModule\r\n    ],\r\n  providers: [ValidateService, AuthService, AuthGuard, JwtHelperService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<h2>Search All Registered Users</h2>\\r\\n<form (submit)=\\\"onSearch()\\\">\\r\\n<input type=\\\"text\\\"  [(ngModel)]=\\\"userId\\\" name=\\\"userId\\\" class=\\\"form-control\\\" placeholder=\\\"userId\\\">\\r\\n<br/>\\r\\n<input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Search\\\">\\r\\n<a class=\\\"btn btn-default\\\" [routerLink]=\\\"['/allUsers']\\\">All Users</a>\\r\\n</form>\\r\\n<br/>\\r\\n<div *ngIf= \\\"users\\\">\\r\\n  \\r\\n<form (submit)=\\\"onDelte()\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n    <h2 class=\\\"page-header\\\">{{users.name}}</h2>\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li class=\\\"list-group-item\\\">Usename: {{users.username}}</li>\\r\\n      <li class=\\\"list-group-item\\\">Email: {{users.email}}</li>\\r\\n      <li class=\\\"list-group-item\\\">Permission: {{users.permission}}</li>\\r\\n      <input type=\\\"submit\\\" class=\\\"btn btn-warning\\\" value=\\\"Delete User\\\">\\r\\n      </ul>\\r\\n    </div>\\r\\n    </form>\\r\\n    </div>\\r\\n\\r\\n      \\r\\n    \\r\\n  \\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-administration',\r\n  templateUrl: './administration.component.html',\r\n  styleUrls: ['./administration.component.css'],\r\n})\r\n\r\n\r\nexport class AdministrationComponent implements OnInit {\r\n  users: Object;\r\n  userId: String;\r\n\r\n  constructor(\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    }\r\n\r\n  onSearch() {\r\n    this.authService.findUser(this.userId).subscribe(data =>\r\n    this.users = data.user);\r\n    }\r\n\r\n  onDelte() {\r\n    this.authService.deleteUser(this.userId).subscribe(data => {});\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2>List of All Reports</h2>\\r\\n<br/>\\r\\n<div *ngFor= \\\"let report of reports\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n      <ul>\\r\\n      <li class=\\\"list-group-item\\\">Date: {{report.date}}</li>\\r\\n      <li class=\\\"list-group-item\\\">Doctor's Note: {{report.docNote}}</li>\\r\\n      <li class=\\\"list-group-item\\\">Prescribed Medicine: {{report.medicineNote}}</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <br />\\r\\n   </div>\\r\\n    \\r\\n      \"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-all-reports',\r\n  templateUrl: './all-reports.component.html',\r\n  styleUrls: ['./all-reports.component.css']\r\n})\r\nexport class AllReportsComponent implements OnInit {\r\n  reports: Object;\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.allReports().subscribe(data =>\r\n      this.reports = data);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2>List of All Registered Users</h2>\\r\\n<br/>\\r\\n<div *ngFor= \\\"let user of users\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n    <h2 class=\\\"page-header\\\">{{user.name}}</h2>\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li class=\\\"list-group-item\\\">Userid: {{user._id}}</li>\\r\\n      <li class=\\\"list-group-item\\\">Usename: {{user.username}}</li>\\r\\n      <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\r\\n      <li class=\\\"list-group-item\\\">Permission: {{user.permission}}</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <br />\\r\\n    </div>\\r\\n    \\r\\n      \"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-all-users',\r\n  templateUrl: './all-users.component.html',\r\n  styleUrls: ['./all-users.component.css']\r\n})\r\nexport class AllUsersComponent implements OnInit {\r\n\r\n  users: Object;\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.getAllUsers().subscribe(authService =>\r\n    this.users = authService);\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<br />\\r\\n<a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/newPatient']\\\">Add New Patient</a>\\r\\n<br />\\r\\n<br />\\r\\n<a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/newAppointment']\\\">Add New Appointment</a>\\r\\n<br />\\r\\n<br />\\r\\n<h2>Appointments</h2>\\r\\n<form (submit)=\\\"onExamine()\\\">\\r\\n<div *ngFor= \\\"let appointment of appointments\\\">\\r\\n        <div class=\\\"jumbotron\\\">\\r\\n        <ul class=\\\"list-group\\\">\\r\\n          <li class=\\\"list-group-item\\\">Date: {{appointment.dateOfAppointment}}</li>\\r\\n          <li class=\\\"list-group-item\\\">Patient: {{appointment.patient}}</li>\\r\\n          <li class=\\\"list-group-item\\\">title: {{appointment.title}}</li>\\r\\n          <li class=\\\"list-group-item\\\">Status: {{appointment.status}}</li>\\r\\n          <li class=\\\"list-group-item\\\">Comment: {{appointment.comment}}</li>\\r\\n          <input *ngIf=\\\"authService.isDoctor()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Examine\\\">\\r\\n          </ul>\\r\\n        </div>\\r\\n        <br />\\r\\n        </div>\\r\\n        </form>\\r\\n        \\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  templateUrl: './calendar.component.html',\r\n  styleUrls: ['./calendar.component.css']\r\n})\r\nexport class CalendarComponent implements OnInit {\r\n  appointments: Object;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.allAppointments().subscribe(data =>\r\n    this.appointments = data);\r\n  }\r\n\r\n  onExamine() {\r\n    this.router.navigate(['/reports']);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  dashboard works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\r\\n  <h1>Mean authentication app</h1>\\r\\n  <p class=\\\"lead\\\">welcome to where time stands still</p>\\r\\n    <div>\\r\\n      <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\r\\n      <a class=\\\"btn btn-default\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\r\\n    </div>\\r\\n  \\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <h3>Express Backend</h3>\\r\\n    <p>mama told me when I was young. sit beside my only son. and listen closely</p>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <h3>Angular-Cli</h3>\\r\\n    <p>there is a house in new orleans they call the rising sun</p>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <h3>JWT tokens</h3>\\r\\n    <p>master of puppets are pulling your spinnin g your mind and smashing yor brains</p>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"        .head\\r\\n        {\\r\\n            padding: 0;\\r\\n            margin: 0;\\r\\n            margin-top: 80px;\\r\\n            width: 100%;\\r\\n            height: 100%;\\r\\n            font-family: \\\"Helvetica Neue\\\" , Helvetica, sans-serif;\\r\\n            background: #FFFFFF;\\r\\n            background-image: url('logo.png');\\r\\n            background-repeat: no-repeat;\\r\\n            background-position: top;\\r\\n        }\\r\\n\\r\\n        .logincontent\\r\\n        {\\r\\n            position: fixed;\\r\\n            width: 350px;\\r\\n            height: 300px;\\r\\n            top: 50%;\\r\\n            left: 50%;\\r\\n            margin-top: -150px;\\r\\n            margin-left: -175px;\\r\\n            background: #07A8C3;\\r\\n            padding-top: 10px;\\r\\n            \\r\\n            \\r\\n        }\\r\\n\\r\\n        .loginheading\\r\\n        {\\r\\n            text-align: center;\\r\\n            border-bottom: solid 1px #ECF2F5;\\r\\n            padding-left: 18px;\\r\\n            padding-bottom: 10px;\\r\\n            color: #ffffff;\\r\\n            font-size: 20px;\\r\\n            font-weight: bold;\\r\\n            font-family: sans-serif;\\r\\n            \\r\\n        }\\r\\n\\r\\n        label\\r\\n        {\\r\\n            color: #ffffff;\\r\\n            display: inline-block;\\r\\n            margin-left: 18px;\\r\\n            padding-top: 10px;\\r\\n            font-size: 15px;\\r\\n        }\\r\\n\\r\\n        input[type=text], input[type=password]\\r\\n        {\\r\\n            font-size: 14px;\\r\\n            padding-left: 10px;\\r\\n            margin: 10px;\\r\\n            margin-top: 12px;\\r\\n            margin-left: 18px;\\r\\n            width: 300px;\\r\\n            height: 35px;\\r\\n            border: 2px solid #ccc;\\r\\n            border-radius: 2px;\\r\\n            font-size: 14px;\\r\\n        }\\r\\n\\r\\n        .loginremember\\r\\n        {\\r\\n            text-align: center;\\r\\n            background: #c9dde8;\\r\\n            height: 80px;\\r\\n            margin-top: 20px;\\r\\n        }\\r\\n\\r\\n        .loginbtn\\r\\n        {\\r\\n            justify-content: center;\\r\\n            margin-top: 25px;\\r\\n            padding: 6px 20px;\\r\\n            font-size: 14px;\\r\\n            font-weight: bold;\\r\\n            color: #fff;\\r\\n            background-color: #07A8C3;\\r\\n            border-radius: 30px;\\r\\n            border: 1px solid #07A8C3;\\r\\n            cursor: pointer;\\r\\n        }\"","module.exports = \"<div class=\\\"head\\\">\\r\\n<form (submit)=\\\"onLoginSubmit()\\\">\\r\\n \\r\\n  <div class=\\\"logincontent\\\">\\r\\n  \\r\\n      <div class=\\\"loginheading\\\">\\r\\n          Login\\r\\n      </div>\\r\\n      <label for=\\\"txtUserName\\\">\\r\\n          Username:</label>\\r\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" />\\r\\n      <label for=\\\"txtPassword\\\">\\r\\n          Password:</label>\\r\\n      <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" />\\r\\n      <div class=\\\"loginremember\\\">\\r\\n          <input  class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Login\\\"/>\\r\\n         \\r\\n      </div>\\r\\n      </div>\\r\\n  \\r\\n</form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  // values from the NgModule\r\n  username: String;\r\n  password: String;\r\n\r\n  constructor(\r\n    // implement the services required for this module\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onLoginSubmit() {\r\n    const user = {\r\n      // populating the usr object with ngmodel obtained username and password\r\n      username: this.username,\r\n      password: this.password\r\n    };\r\n    // inject authsService into the backend of the application\r\n    this.authService.authenticateUser(user).subscribe(data => {\r\n      if (data.sucess) {\r\n        this.authService.storeUserData(data.token, data.user, data.user.id); // inject the method to obtain user object, token and userid\r\n        console.log(data.user.id);\r\n        this.router.navigate(['/calendar']); // navigate to the calender if successful\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['Something went wrong'],\r\n          dismissible: true,\r\n          timeout: 1000,\r\n          type: 'danger'\r\n        });\r\n        this.router.navigate(['/login']); // navigate to login\r\n      }\r\n    });\r\n}\r\n}\r\n","module.exports = \"\"","module.exports = \"<br />\\r\\n<a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/writeMessage']\\\">Write Memo</a>\\r\\n<br />\\r\\n<br />\\r\\n<h2>Memo by users</h2>\\r\\n<br />\\r\\n<br />\\r\\n<div *ngFor= \\\"let message of messages\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n    <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item\\\">Date: {{message.date}}</li>\\r\\n      <li class=\\\"list-group-item\\\">Memo: {{message.note}}</li>\\r\\n      \\r\\n      </ul>\\r\\n    </div>\\r\\n    <br />\\r\\n    </div>\\r\\n    \"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n\r\n  messages: Object;\r\n\r\n  constructor(\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.getAllMessages().subscribe(authService =>\r\n    this.messages = authService);\r\n    }\r\n  }\r\n\r\n\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-light bg-light\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">MedLog</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\"><a class=\\\"nav-link\\\"  [routerLink]=\\\"['/calendar']\\\">Schedule</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\"><a class=\\\"nav-link\\\"  [routerLink]=\\\"['/messages']\\\">Messages</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\"><a class=\\\"nav-link\\\"  [routerLink]=\\\"['/patient']\\\">Patients</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.loggedIn() && authService.isDoctor()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\"><a class=\\\"nav-link\\\"  [routerLink]=\\\"['/reports']\\\">Reports</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.loggedIn() && authService.isAdmin()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\"><a class=\\\"nav-link\\\"  [routerLink]=\\\"['/administration']\\\">Administration</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n      <li *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\r\\n      </li>    \\r\\n      <li *ngIf=\\\"authService.loggedIn()\\\"><a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">Logout</a>\\r\\n      </li> \\r\\n      \\r\\n     </ul>\\r\\n  </div>\\r\\n</nav>\""," import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onLogoutClick() {\r\n   this.authService.logout();\r\n   this.flashMessage.showFlashMessage({\r\n    messages: ['you are now logged out'],\r\n    dismissible: true,\r\n    timeout: 3000,\r\n    type: 'success'\r\n  });\r\n  this.router.navigate(['/login']);\r\n  return false;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<br/>\\r\\n<h2 class=\\\"page-header\\\">Register New Appointment</h2>\\r\\n<form (submit)=\\\"onCreateAppointment()\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <label>Date:</label>\\r\\n      <input type=\\\"date\\\" [(ngModel)]=\\\"dateOfappointment\\\" name=\\\"dateOfappointment\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <label>Title:</label>\\r\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"title\\\" name=\\\"title\\\" class=\\\"form-control\\\">\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <select class=\\\"form-control\\\">\\r\\n      <option *ngFor=\\\"let patient of patients\\\">{{patient.name}}</option>\\r\\n      </select>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>patient's name:</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"patient\\\" name=\\\"patient\\\" class=\\\"form-control\\\">\\r\\n</div>\\r\\n\\r\\n  \\r\\n<div class=\\\"form-group\\\">\\r\\n        <label>Status:</label>\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"status\\\" name=\\\"status\\\" class=\\\"form-control\\\">\\r\\n      </div>\\r\\n\\r\\n    \\r\\n <div class=\\\"form-group\\\">\\r\\n    <label>Comment:</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"comment\\\" name=\\\"comment\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n\\r\\n<input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { ValidateService } from '../../services/validate.service';\r\n\r\n@Component({\r\n  selector: 'app-new-appointment',\r\n  templateUrl: './new-appointment.component.html',\r\n  styleUrls: ['./new-appointment.component.css']\r\n})\r\nexport class NewAppointmentComponent implements OnInit {\r\n  dateOfAppointment: String;\r\n  title: String;\r\n  patient: String;\r\n  status: String;\r\n  comment: String;\r\n  patients: Object;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private validateService: ValidateService,\r\n    private flashMessage: NgFlashMessageService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.allPatientsName().subscribe(authService =>\r\n      this.patients = authService);\r\n  }\r\n\r\n  onCreateAppointment() {\r\n    const appointment = {\r\n      dateOfAppointment: this.dateOfAppointment,\r\n      title: this.title,\r\n      patient: this.patient,\r\n      status: this.status,\r\n      comment: this.comment\r\n    };\r\n    console.log('patient');\r\n    this.authService.newAppointment(appointment).subscribe(data => {\r\n      if (data.success) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['An Appointment was created'],\r\n          dismissible: true,\r\n          timeout: 1000,\r\n          type: 'success'\r\n        });\r\n        this.router.navigate(['/calendar']);\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['Something went wrong'],\r\n          dismissible: true,\r\n          timeout: 1000,\r\n          type: 'danger'\r\n        });\r\n        this.router.navigate(['/newAppointment']);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Register New Patient</h2>\\r\\n<form (submit)=\\\"onCreatePatient()\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Name:</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>DOB:</label>\\r\\n    <input type=\\\"date\\\" [(ngModel)]=\\\"dateOfBirth\\\" name=\\\"dateOfBirth\\\" class=\\\"form-control\\\">\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label>Sex:</label>\\r\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"sex\\\" name=\\\"sex\\\" class=\\\"form-control\\\">\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label>Email:</label>\\r\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n    <label>Id/License:</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"licenseId\\\" name=\\\"licenseId\\\" class=\\\"form-control\\\">\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n    <label>Contact:</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"contact\\\" name=\\\"contact\\\" class=\\\"form-control\\\">\\r\\n</div> \\r\\n<input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { ValidateService } from '../../services/validate.service';\r\n\r\n@Component({\r\n  selector: 'app-new-patient',\r\n  templateUrl: './new-patient.component.html',\r\n  styleUrls: ['./new-patient.component.css']\r\n})\r\nexport class NewPatientComponent implements OnInit {\r\n  name: String;\r\n  dateOfBirth: Date;\r\n  sex: String;\r\n  email: String;\r\n  licenseId: String;\r\n  contact: String;\r\n\r\n  constructor(\r\n    private flashMessage: NgFlashMessageService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private validateService: ValidateService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onCreatePatient() {\r\n    const patient = {\r\n      name: this.name,\r\n      dateOfBirth: this.dateOfBirth,\r\n      sex: this.sex,\r\n      email: this.email,\r\n      licenseId: this.licenseId,\r\n      contact: this.contact\r\n    };\r\n\r\n    this.authService.registerPatient(patient).subscribe(data => {\r\n      if (data.success) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['Patient is now Registered'],\r\n          dismissible: true,\r\n          timeout: 1000,\r\n          type: 'success'\r\n        });\r\n        this.router.navigate(['/calendar']);\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['Something went wrong'],\r\n          dismissible: true,\r\n          timeout: 3000,\r\n          type: 'danger'\r\n        });\r\n        this.router.navigate(['/newPatient']);\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2>List of All Registered Patients</h2>\\r\\n<br/>\\r\\n<div *ngFor= \\\"let patient of patients\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n    <h2 class=\\\"page-header\\\">{{patient.name}}</h2>\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li class=\\\"list-group-item\\\">DOB: {{patient.dateOfBirth}}</li>\\r\\n      <li class=\\\"list-group-item\\\">Sex: {{patient.sex}}</li>\\r\\n      <li class=\\\"list-group-item\\\">Email: {{patient.email}}</li>\\r\\n      <li class=\\\"list-group-item\\\">LicenseId: {{patient.licenseId}}</li>\\r\\n      <li class=\\\"list-group-item\\\">Contact: {{patient.contact}}</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <br />\\r\\n    </div>\\r\\n    \\r\\n      \"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-patient',\r\n  templateUrl: './patient.component.html',\r\n  styleUrls: ['./patient.component.css']\r\n})\r\nexport class PatientComponent implements OnInit {\r\npatients: Object;\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.allPatientsName().subscribe(authService =>\r\n    this.patients = authService);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Register</h2>\\r\\n<form (submit)=\\\"onRegisterSubmit()\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Name:</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Username:</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\">\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label>Email:</label>\\r\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label>Password:</label>\\r\\n  <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\r\\n</div>\\r\\n<input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ValidateService } from '../../services/validate.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  name: String;\r\n  username: String;\r\n  email: String;\r\n  password: String;\r\n\r\n  constructor(\r\n    private validateService: ValidateService,\r\n    private flashMessage: NgFlashMessageService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onRegisterSubmit() {\r\n    const user = {\r\n      name: this.name,\r\n      email: this.email,\r\n      username: this.username,\r\n      password: this.password\r\n\r\n    };\r\n\r\n    // validate registeration\r\n    if (!this.validateService.validateRegister(user)) {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: ['please fill the forms'],\r\n        dismissible: true,\r\n        timeout: 1000,\r\n        type: 'danger'\r\n      });\r\n      return false;\r\n    }\r\n    // validate email\r\n    if (!this.validateService.validateEmail(user.email)) {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: ['please fill the correct email address'],\r\n        dismissible: true,\r\n        timeout: 1000,\r\n        type: 'danger'\r\n      });\r\n      return false;\r\n  }\r\n\r\n  // register User\r\n  this.authService.registerUser(user).subscribe(data => {\r\n    if (data.success) {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: ['You are now registerd to sign in'],\r\n        dismissible: true,\r\n        timeout: 3000,\r\n        type: 'success'\r\n      });\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: ['Something went wrong'],\r\n        dismissible: true,\r\n        timeout: 3000,\r\n        type: 'danger'\r\n      });\r\n      this.router.navigate(['/register']);\r\n    }\r\n  });\r\n\r\n}\r\n}\r\n","module.exports = \"\"","module.exports = \"<br />\\r\\n<a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/allReports']\\\">View All Reports</a>\\r\\n<br />\\r\\n<form (submit) = \\\"onWrite()\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <h2>Report</h2>\\r\\n      <label>Doctor's Note:</label>\\r\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"docNote\\\" name=\\\"docNote\\\" class=\\\"form-control\\\" size=\\\"20\\\"/>\\r\\n      <br />\\r\\n      <br />\\r\\n      <label>Medicines:</label>\\r\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"medicineNote\\\" name=\\\"medicineNote\\\" class=\\\"form-control\\\" size=\\\"20\\\"/>\\r\\n      <br />\\r\\n      <br />\\r\\n      <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Report\\\"/>   \\r\\n  </div>\\r\\n  </form>\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.css']\r\n})\r\nexport class ReportsComponent implements OnInit {\r\n  docNote: String;\r\n  medicineNote: String;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\nonWrite() {\r\n  const report = {\r\n    docNote: this.docNote,\r\n    medicineNote: this.medicineNote\r\n  };\r\n\r\n  this.authService.newReport(report).subscribe(data => {\r\n    if (data.success) {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: ['Report is now Registered'],\r\n        dismissible: true,\r\n        timeout: 1000,\r\n        type: 'success'\r\n      });\r\n      this.router.navigate(['/calendar']);\r\n    } else {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: ['Something went wrong'],\r\n        dismissible: true,\r\n        timeout: 3000,\r\n        type: 'danger'\r\n      });\r\n      this.router.navigate(['/reports']);\r\n    }\r\n  });\r\n\r\n}\r\n}\r\n","module.exports = \"\"","module.exports = \"<form (submit) = \\\"onCreate()\\\">\\r\\n<div class=\\\"form-group\\\">\\r\\n    <h2>Memo</h2>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"note\\\" name=\\\"note\\\" class=\\\"form-control\\\" rows=\\\"10\\\"/>\\r\\n    <br />\\r\\n    <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Create\\\"/>\\r\\n    \\r\\n</div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-write-message',\r\n  templateUrl: './write-message.component.html',\r\n  styleUrls: ['./write-message.component.css']\r\n})\r\nexport class WriteMessageComponent implements OnInit {\r\n  note: String;\r\n\r\n  constructor(\r\n    private authservice: AuthService,\r\n    private router: Router,\r\n    private flashmessage: NgFlashMessageService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onCreate() {\r\n    const message = {\r\n      note: this.note\r\n      };\r\n    this.authservice.newMessage(message).subscribe(data => {\r\n      if (data.success) {\r\n        this.flashmessage.showFlashMessage({\r\n          messages: ['your messages has been sent'],\r\n          dismissible: true,\r\n          timeout: 3000,\r\n          type: 'success'\r\n        });\r\n        this.router.navigate(['/messages']);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor (private authService: AuthService, private router: Router) {\r\n    }\r\n\r\n    canActivate() {\r\n        if (this.authService.loggedIn()) {\r\n          return true;\r\n\r\n        } else {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport {map} from 'rxjs/operators';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  authToken: any;\r\n  user: any;\r\n  message: any;\r\n  userId: String;\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  registerUser(user) {\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('users/register', user, {headers: headers})\r\n    .pipe(map(res => res.json()));\r\n  }\r\n\r\n  authenticateUser(user) {\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('users/authenticate', user, {headers: headers})\r\n    .pipe(map(res => res.json()));\r\n\r\n  }\r\n\r\n  findUser(userId: String) {\r\n    const headers = new Headers();\r\n    return this.http.get('users/' + userId, {headers: headers})\r\n    .pipe(map(res => res.json()));\r\n  }\r\n\r\n  deleteUser(userId: String) {\r\n    const headers = new Headers();\r\n    return this.http.delete('users/' + userId, {headers: headers})\r\n    .pipe(map(res => res.json()));\r\n  }\r\n\r\n  getAllUsers() {\r\n    const headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get('users/users', {headers: headers})\r\n    .pipe(map(res => res.json()));\r\n  }\r\n\r\n  getAllMessages() {\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get('users/index', {headers: headers})\r\n    .pipe(map(res => res.json()));\r\n  }\r\n\r\n  getProfile() {\r\n    const headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get('users/profile', {headers: headers})\r\n    .pipe(map(res => res.json()));\r\n  }\r\n\r\n  newMessage(message) {\r\n    const headers = new Headers();\r\n    this.getId();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('users/' + this.userId + '/messages', message, {headers: headers})\r\n    .pipe(map(res => res.json()));\r\n  }\r\n\r\n  registerPatient(patient) {\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('users/registerPatient', patient, {headers: headers})\r\n    .pipe(map(res => res.json()));\r\n  }\r\n\r\n  newAppointment(appointment) {\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('users/newAppointment', appointment, {headers: headers})\r\n    .pipe(map(res => res.json()));\r\n  }\r\n\r\n  allAppointments () {\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get('users/allAppointments', {headers: headers})\r\n    .pipe(map(res => res.json()));\r\n  }\r\n\r\n  allPatientsName () {\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get('users/allPatients', {headers: headers})\r\n    .pipe(map(res => res.json()));\r\n  }\r\n\r\n  newReport (report) {\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('users/newReport', report, {headers: headers})\r\n    .pipe(map(res => res.json()));\r\n\r\n  }\r\n\r\n  allReports () {\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get('users/allReports', {headers: headers})\r\n    .pipe(map(res => res.json()));\r\n  }\r\n\r\n\r\n\r\n  storeUserData(token, user, id) {\r\n   localStorage.setItem('id_token', token);\r\n   localStorage.setItem('user', JSON.stringify(user));\r\n   localStorage.setItem('id', id);\r\n   this.authToken = token;\r\n   this.user = user;\r\n   this.userId = id;\r\n }\r\n\r\n getId() {\r\n  this.userId = localStorage.getItem('id');\r\n  console.log(this.userId);\r\n }\r\n\r\n loadToken() {\r\n   const token = localStorage.getItem('id_token');\r\n   this.authToken = token;\r\n   console.log(this.authToken);\r\n }\r\n\r\nloggedIn() {\r\n   const helper = new JwtHelperService();\r\n   if (!this.authToken) {\r\n     return false;\r\n     } else {\r\n   return !helper.isTokenExpired(this.authToken); }\r\n  }\r\n\r\n logout() {\r\n   this.authToken = null;\r\n   this.user = null;\r\n   localStorage.clear();\r\n }\r\n\r\n isAdmin() {\r\n  if (this.user.permission === 'admin') {\r\n    return true;\r\n\r\n  } else {\r\n    return false;\r\n  }\r\n  }\r\n\r\n  isDoctor() {\r\n    if (this.user.permission === 'doctor') {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidateService {\r\n\r\n  constructor() { }\r\n\r\n  validateRegister(user) {\r\n    if (user.name === undefined || user.email === undefined || user.username === undefined || user.password === undefined) {\r\n      return false;\r\n\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validateEmail(email) {\r\n    // tslint:disable-next-line:max-line-length\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}